version: '2.1'
networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  weather_exporter:
    build: ./docker
    image: ${ORGANIZATION}/${CONTAINER}:${VERSION}
    container_name: ${CONTAINER}
    ports:
      - 127.0.0.1:9265:9265
    env_file:
      .env
    environment:
      - DARK_SKY_API_KEY=${DARK_SKY_API_KEY}
    volumes:
      - ./docker/src/weather_exporter:/opt/weather_exporter
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:v2.8.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 127.0.0.1:9090:9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.0.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 127.0.0.1:3000:3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"